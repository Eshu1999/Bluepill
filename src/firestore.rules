
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Profiles: Read-only for others, write only for owner
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow create, update: if isOwner(userId);
    }
    
    // Medications: Only owner can access
    match /medications/{docId} {
    	allow read, write: if isOwner(resource.data.userId);
    }
    
    // Stored Medicines: Only owner can access
    match /medicine-storage/{docId} {
    	allow read, write: if isOwner(resource.data.userId);
    }
    
    // Adherence Logs: Only owner can access
    match /adherenceLogs/{docId} {
    	allow read, write: if isOwner(resource.data.userId);
    }
    
    // Inventory: Only owner (who must be a chemist) can access
    match /inventory/{docId} {
    	allow read, write: if isOwner(resource.data.userId) && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.accountType == 'chemist';
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
    	// Anyone can create a request
    	allow create: if request.auth != null && request.resource.data.from == request.auth.uid;
      // Only recipient can read or update (accept/decline)
      allow read, update: if request.auth != null && resource.data.to == request.auth.uid;
    }

    // Chemist Medication Requests
    match /requests/{chemistId}/medicationRequests/{requestId} {
      // Any authenticated user can create a request for a chemist
      allow create: if request.auth != null;
      // Only the chemist can read/update the requests sent to them
      allow read, update, delete: if isOwner(chemistId);
    }
    
    // Chats & Messages
    match /chats/{chatId} {
    	// Allow read/write only if the user is a member of the chat
    	allow read, update: if request.auth.uid in resource.data.members;
      allow create: if request.auth.uid in request.resource.data.members;
      
      match /messages/{messageId} {
      	allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.members;
      }
    }
  }
}
