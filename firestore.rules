rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but only create/update their own.
    match /profiles/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Users can only manage their own data. Family members can read medication schedules.
    match /medications/{docId} {
      allow read: if request.auth.uid == resource.data.userId ||
                    get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.family.hasAny([resource.data.userId]);
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;
    }

    // Users can only manage their own stored medicine.
    match /medicine-storage/{docId} {
       allow read, create, update, delete: if request.auth.uid == request.resource.data.userId;
    }

    // Adherence logs can only be created and read by the user they belong to.
     match /adherenceLogs/{docId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if false; // Logs should be immutable
    }

    // Chemists can only manage their own inventory.
    match /inventory/{docId} {
        allow read, create, update, delete: if get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.accountType == 'chemist' && request.auth.uid == request.resource.data.userId;
    }

    // Friend Requests can be created by any logged-in user.
    // The recipient is the only one who can update/accept/decline it.
    match /friendRequests/{docId} {
        allow read: if request.auth.uid == resource.data.to || request.auth.uid == resource.data.from;
        allow create: if request.auth.uid == request.resource.data.from;
        allow update: if request.auth.uid == resource.data.to;
    }

    // Medication Requests (from customer to chemist)
    match /requests/{chemistId}/medicationRequests/{requestId} {
        // The chemist can read/update/delete requests.
        allow read, update, delete: if request.auth.uid == chemistId;
        // The customer who created it can create it.
        allow create: if request.auth.uid == request.resource.data.customerId;
    }
    
    // Chat messages and details
    match /chats/{chatId} {
        // Only members of the chat can read or update it (e.g. last message)
        allow read, update: if request.auth.uid in resource.data.members;
        allow create: if request.auth.uid in request.resource.data.members;

        // Messages can only be created by chat members. No one can edit/delete.
        match /messages/{messageId} {
            allow read: if get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
            allow create: if request.auth.uid == request.resource.data.senderId && get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
            allow update, delete: if false;
        }
    }
  }
}